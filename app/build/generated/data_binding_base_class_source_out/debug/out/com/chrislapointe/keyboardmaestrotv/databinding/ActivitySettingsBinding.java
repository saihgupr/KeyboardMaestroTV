// Generated by view binder compiler. Do not edit!
package com.chrislapointe.keyboardmaestrotv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chrislapointe.keyboardmaestrotv.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button gridColumnsDecrease;

  @NonNull
  public final TextView gridColumnsDisplay;

  @NonNull
  public final Button gridColumnsIncrease;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final EditText macIpEdit;

  @NonNull
  public final EditText macPortEdit;

  @NonNull
  public final Button testConnectionButton;

  @NonNull
  public final EditText timeoutEdit;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView, @NonNull Button backButton,
      @NonNull Button gridColumnsDecrease, @NonNull TextView gridColumnsDisplay,
      @NonNull Button gridColumnsIncrease, @NonNull LinearLayout headerLayout,
      @NonNull EditText macIpEdit, @NonNull EditText macPortEdit,
      @NonNull Button testConnectionButton, @NonNull EditText timeoutEdit) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.gridColumnsDecrease = gridColumnsDecrease;
    this.gridColumnsDisplay = gridColumnsDisplay;
    this.gridColumnsIncrease = gridColumnsIncrease;
    this.headerLayout = headerLayout;
    this.macIpEdit = macIpEdit;
    this.macPortEdit = macPortEdit;
    this.testConnectionButton = testConnectionButton;
    this.timeoutEdit = timeoutEdit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.grid_columns_decrease;
      Button gridColumnsDecrease = ViewBindings.findChildViewById(rootView, id);
      if (gridColumnsDecrease == null) {
        break missingId;
      }

      id = R.id.grid_columns_display;
      TextView gridColumnsDisplay = ViewBindings.findChildViewById(rootView, id);
      if (gridColumnsDisplay == null) {
        break missingId;
      }

      id = R.id.grid_columns_increase;
      Button gridColumnsIncrease = ViewBindings.findChildViewById(rootView, id);
      if (gridColumnsIncrease == null) {
        break missingId;
      }

      id = R.id.header_layout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.mac_ip_edit;
      EditText macIpEdit = ViewBindings.findChildViewById(rootView, id);
      if (macIpEdit == null) {
        break missingId;
      }

      id = R.id.mac_port_edit;
      EditText macPortEdit = ViewBindings.findChildViewById(rootView, id);
      if (macPortEdit == null) {
        break missingId;
      }

      id = R.id.test_connection_button;
      Button testConnectionButton = ViewBindings.findChildViewById(rootView, id);
      if (testConnectionButton == null) {
        break missingId;
      }

      id = R.id.timeout_edit;
      EditText timeoutEdit = ViewBindings.findChildViewById(rootView, id);
      if (timeoutEdit == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, backButton,
          gridColumnsDecrease, gridColumnsDisplay, gridColumnsIncrease, headerLayout, macIpEdit,
          macPortEdit, testConnectionButton, timeoutEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
